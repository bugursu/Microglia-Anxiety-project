library(dbplyr)
library(writexl)
library(tidyverse)
library(Seurat, quietly = T)
library(harmony)
library(Matrix, quietly = T)
library(readr, quietly = T)
library(ggplot2)
library(cowplot)
library(ggrepel)
library(biomaRt)
library(patchwork)
library(hdf5r)
library(scater)
library(loomR)

# Data creation

seurat.combi <- CreateSeuratObject(counts = cbindc("HABmale1", "HABmale2", "NABmale1","NABmale2", "HABfemale1", "HABfemale2", "NABfemale1", "NABfemale1"), project = "SeuratCombined", min.cells = 5) %>%
  Seurat::NormalizeData(verbose = FALSE) %>%
  FindVariableFeatures(selection.method = "vst", nfeatures = 2000) %>% 
  ScaleData(verbose = FALSE) %>% 
  RunPCA(pc.genes = pbmc@var.genes, npcs = 40, verbose = FALSE)


seurat.combi <- PercentageFeatureSet(seurat.combi, pattern = "^mt-", col.name = "percent.mt")
seurat.combi <- PercentageFeatureSet(seurat.combi, pattern = "^Rp[sl]", col.name = "percent.ribo")


VlnPlot(seurat.combi, features = c("nFeature_RNA", "nCount_RNA", "percent.mt","percent.ribo"), ncol = 4,group.by = "stim")

options(repr.plot.height = 5, repr.plot.width = 12)
p1 <- DimPlot(object = seurat.combi, reduction = "pca", group.by = "stim")
p2 <- VlnPlot(object = seurat.combi, features = "PC_1", group.by = "stim")
plot_grid(p1,p2)


VlnPlot(seurat.combi, features = c("nFeature_RNA", "nCount_RNA", "percent.mt","percent.ribo"), ncol = 4,group.by = "stim")

mt <- 20
rb <- 20


pct <- seurat_combi[["pca"]]@stdev / sum(seurat_combi[["pca"]]@stdev) * 100
choice1 <- which(cumsum(pct) > 80 & pct < 5)[1]
choice2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1 & cumsum(pct) > 60 ), decreasing = T)[1] + 1

Seurat::ElbowPlot(seurat_combi, ndims= 50) + ylab("variance explained (%)") +
                geom_point(x = pcs, y = seurat_combi[["pca"]]@stdev[pcs]) +
                geom_label(
                  label=sprintf("PC selected: %1.0f",pcs), 
                  x=pcs,
                  y=seurat_combi[["pca"]]@stdev[pcs] + 1,
                  label.padding = unit(0.55, "lines"), # Rectangle size around label
                  label.size = 0.35,
                  color = "black")


# Filterings
seurat.combi <- subset(seurat.combi, subset = nFeature_RNA > 200 & nFeature_RNA < 7000 & percent.mt < mt & percent.ribo < rb ) 

# Recheck the violin plot after QC
VP_afterQC <- VlnPlot(seurat.combi, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.ribo"), 
                      group.by = "stim",
                      ncol = 4, pt.size = 0) + xlab("conditions")




# Plot an elbow plot to visualize the selection (Sanity check)
Seurat::ElbowPlot(seurat.combi, ndims= 30) + ylab("variance explained (%)") 

#{r clustering using harmony and run UMAP}
set.seed(2023)
# Run Harmony integration on the dataset, and find the clusters
seurat.combi <- RunHarmony(seurat.combi, group.by.vars = c("stim"), dims.use = 1:24)
seurat.combi <- FindNeighbors(seurat.combi, reduction = "harmony", dims = 1:24)
seurat.combi <- FindClusters(seurat.combi, resolution = 0.6) 


harmony_embeddings <- Embeddings(seurat.combi, 'harmony')
harmony_embeddings[1:5, 1:5]

seurat.combi <- RunUMAP(seurat.combi, reduction = "harmony", dims = 1:24)


#######
set.seed(2023)
seurat.combi <- seurat.combi %>% 
  RunTSNE(reduction = "harmony", dims = 1:24) %>% 
  FindNeighbors(reduction = "harmony", dims = 1:24) %>% 
  FindClusters(resolution = 0.4) %>% 
  identity()



seurat.combi <- seurat.combi %>% 
  RunUMAP(reduction = "harmony", dims = 1:24) %>% 
  FindNeighbors(reduction = "harmony", dims = 1:24) %>% 
  FindClusters(resolution = 0.4) %>% 
  identity()


cx3cr1_stim<-FeaturePlot(object = seurat.combi, features = "Cx3cr1",split.by = "stim")

p2ry12_stim<-FeaturePlot(object = seurat.combi, features = "P2ry12",split.by = "stim")


####Cluster Specific Signatures ####

Markers <- FindAllMarkers(seurat.combi, only.pos = TRUE, min.pct = 0.2, verbose = FALSE, logfc.threshold = 0.4,test.use = "bimod")
Markers <-Markers %>%
  group_by(cluster)
Markers_sorted<-Markers %>% arrange(desc(Markers$avg_log2FC))
Markers_sorted <- subset(Markers_sorted, Markers_sorted$p_val_adj < 0.001)
Markers_sorted<-as.data.frame(Markers_sorted)
write_rds(Markers, "Markers1.rds")



# Plot the heatmap
#heatmap_feature <- DoHeatmap(seurat_combi, features = unique(seurat_markers$gene), group.colors = pal_simpsons()(16))

DefaultAssay(seurat.combi) <- "RNA"
seurat.combi_scaled <- ScaleData(seurat.combi,verbose = FALSE)
Markers %>%
  group_by(cluster) %>%
  top_n(n = 40, wt = avg_log2FC) -> top40

DoHeatmap(seurat.combi_scaled, features = top40$gene) + NoLegend()

DoHeatmap(subset(seurat.combi_scaled2,downsample =900), features = heatmapmarkersFinal, size = 3,group.bar = TRUE)


levels(seurat.combi)
cluster_numbers <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)
clusters_annotated <- c("MI","MIII","MII","MII","MIII","MIII","BAM","MIV","Proliferative","MI","MV","Proliferative","Ifn. Responsive I","Ifn. Responsive II","Ifn. Responsive III")  
names(clusters_annotated)
names(clusters_annotated) <- levels(seurat.combi)
combi_named1 <- RenameIdents(seurat.combi, clusters_annotated)

n_cellsM <- FetchData(combi_named1, 
                      
                      vars = c("ident","stim")) %>%
  dplyr::count(ident,stim) %>% 
  spread(ident, n) 

write_xlsx(n_cellsM, "CellNumberByClusterCombi_NAMED.xlsx")


plot_list <- FeaturePlot(
  seurat.combi,
  features=c("P2ry12","Cx3cr1","Hexb","Mrc1","Ms4a7","Cd9","Trem2","Cd68","Lamp1","Tnfrsf21","Ifngr1","Ifnar2"),
  combine=FALSE, cols=viridis(256),
  max.cutoff='q98',
  reduction = "tsne"
)


library(scCustomize)

# Set color palette
pal <- viridis(n = 10, option = "C", direction = -1)

# Create Plots

FeaturePlot_scCustom(seurat_object = combi_named1, features = "Trem2", colors_use = pal,reduction = "tsne")



Ex<-c("Fos","Junb","Egr1","Hspa1a")
nEx<-FeaturePlot(object = combi_named1, features = Ex,
                 reduction = "tsne",split.by = "stim")



Plot_Density_Custom(seurat_object =combi_named1, features = c("Cd68","Trem2","C1qa","C1qb","C1qc","Cx3cr1","Lamp1","Lamp2","Ifngr1","Ifnar2","Tnfrsf21","Il6"),reduction = "tsne")

DotPlot_scCustom(seurat_object = combi_named1, features = dot, x_lab_rotate = TRUE,flip_axes = F, y_lab_rotate = TRUE)


all_markers <- FindAllMarkers(object = combi_named1)

write_rds(all_markers,"all_markers.rds")


View(all_markers)
all_markers <- all_markers %>%
  group_by(cluster) %>%
  arrange(desc(avg_log2FC)) %>%
  arrange(cluster)
write_xlsx(all_markers, "all_markers.xlsx")


###DifferentialExpression ###

DefaultAssay(combi_named1) <- "RNA"


microglia.1<- subset(combi_named1, idents = c("MI"))
Idents(microglia.1) <- "stim"
avg.microglia.1 <- log1p(AverageExpression(microglia.1, verbose = FALSE)$RNA)
avg.microglia.1<-as.data.frame(avg.microglia.1)
avg.microglia.1$gene <- rownames(avg.microglia.1)

DEG.1 <- FindMarkers(microglia.1, ident.1 = "HABmale", ident.2 = "HABfemale", verbose = FALSE, test.use = "DESeq2")
head(DEG.1, n = 100)

DEG.1$Genes<-rownames(DEG.1)
write_xlsx(DEG.1, "MI_HABmaleVSfemale.Expr.xlsx")

microglia.3<- subset(combi_named1, idents = c("MIII"))
Idents(microglia.3) <- "stim"
avg.microglia.3 <- log1p(AverageExpression(microglia.3, verbose = FALSE)$RNA)
avg.microglia.3<-as.data.frame(avg.microglia.3)
avg.microglia.3$gene <- rownames(avg.microglia.3)

DEG.2 <- FindMarkers(microglia.3, ident.1 = "HABmale", ident.2 = "HABfemale", verbose = FALSE, test.use = "DESeq2")
head(DEG.2, n = 100)

DEG.2$Genes<-rownames(DEG.2)
write_xlsx(DEG.2, "MIII_HABmaleVSfemale.Expr.xlsx")


microglia.2<- subset(combi_named1, idents = c("MI"))
Idents(microglia.2) <- "stim"
avg.microglia.2 <- log1p(AverageExpression(microglia.2, verbose = FALSE)$RNA)
avg.microglia.2<-as.data.frame(avg.microglia.2)
avg.microglia.2$gene <- rownames(avg.microglia.2)

DEG.3 <- FindMarkers(microglia.2, ident.1 = "HABmale", ident.2 = "NABmale", verbose = FALSE, test.use = "DESeq2")
head(DEG.3, n = 100)

DEG.3$Genes<-rownames(DEG.3)
write_xlsx(DEG.2, "3HABmaleVSNABmale.Expr.xlsx")

microglia.4<- subset(combi_named1, idents = c("MI"))
Idents(microglia.4) <- "stim"
avg.microglia.4 <- log1p(AverageExpression(microglia.4, verbose = FALSE)$RNA)
avg.microglia.4 <-as.data.frame(avg.microglia.4)
avg.microglia.4$gene <- rownames(avg.microglia.4)

DEG.4 <- FindMarkers(microglia.4, ident.1 = "HABfemale", ident.2 = "NABfemale", verbose = FALSE, test.use = "DESeq2")
head(DEG.4, n = 100)

DEG.4$Genes<-rownames(DEG.4)
write_xlsx(DEG.4, "4HABmaleVSNABmale.Expr.xlsx")


